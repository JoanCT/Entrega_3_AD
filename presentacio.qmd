---
title: "Problema 6"
subtitle: "Anàlisi de Dades 2024-25"
date: 12/18/2024
format:
  revealjs:
    embed-resources: true
    smaller: true
    theme: default
    footer: "Miquel Àngel Aguiló, Joan Camps, Gerard Ribas"
date-format: "DD/MM/YYYY"
author: "Miquel Àngel Aguiló, Joan Camps, Gerard Ribas"
lang: "ca"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = F, warning = FALSE, message = FALSE)
library(tidyverse)
library(ggplot2)
library(readr)
library(janitor)
library(viridis)
library(ggcorrplot)
```

## Continguts
- Enunciat
- Introducció
- Anàlisi exploratòria
- Models additiu i multiplicatiu 
- Prediccions 
- Conclusions

## Enunciat
- Sèrie temporal trimestral
  - Vendes d'un producte en milers
- El 80% de les dades són per aprendre, el 20% restant per avaluar la capacitat predictiva

. . .

- Ens demanen:
  - Descriure la sèrie: gràfic, tendència, variabilitat i estacionalitat
  - ACF i PACF
  - Model additiu i multiplicatiu
  - Fer pronòstics amb el millor

## Introducció
- Les dades només són un llistat numèric
- No tenim informació de
  - quan comença la sèrie
  - el producte i l'empresa en qüestió
  
  
- Tècniques utilitzades:
  - ACF i PACF
  - Regressió simple
  - Transformació de la sèrie a una estacionaria
  - Error Quadràtic Mitjà

  
# Anàlisi exploratòria

## Descripció general de les dades
- Tenim 48 dades (12 períodes de quatre trimestres)
- Prenim les 36 primeres per aprendre (75%)
- Les 12 darreres per avaluar els pronòstics
  
## Sèrie temporal
```{r}
# totes les dades
raw_data <- read.csv("ts.csv",
                   header=FALSE, sep=" ")
ts_raw <- ts(raw_data, frequency = 4)
n <- nrow(raw_data)

# seleccionam el 80% (mòdul 4) de les files
n_data <- floor(0.8*n)
n_data <- n_data - (n_data %% 4)
data <- raw_data[1:n_data,]
ts <- ts(data, frequency = 4)

tendencia=lm(data ~ time(ts))

# dibuixam les dades en un gràfic
x=1:11
plot.ts(ts, xlab = "Temps", ylab = "Ventes en milers", xaxt="n")
lines(c(1,60), c(10,160), type='l')
abline(tendencia, col = "blue", lwd = 2)
axis(1, at = x, labels = x)
```

## Estacionalitat
:::: {.columns}

::: {.column width="75%"}


```{r}
mes2 <- factor((1:n_data %% 4), levels = 0:3)
levels(mes2)[levels(mes2) == "0"] <- "4"
mes2 <- factor(mes2, levels = c("1","2","3","4"))
df_aux = data.frame(mes2, data)
ggplot(df_aux, aes(x = mes2, y = data)) +
  xlab("Trimestre") + 
  ylab("Vendes en milers")+
  geom_boxplot() +
  theme(axis.text.x=element_text(angle=90,hjust=1)) 
```
:::
::: {.column width="25%"}

```{r}

cat("p-valor", (summary(aov(data ~ mes2, data=df_aux ))[[1]][["Pr(>F)"]][1]), "\n")

pairwise.t.test(df_aux$data, df_aux$mes2, paired=TRUE)
```
:::
::::

## ACF
```{r}
acf(ts)
```

## PACF
```{r}
pacf(ts)
```



# Model additiu i multiplicatiu

## decompose()
```{r}
add = decompose(ts, type = "additive")
plot(add)
```

## Comparativa (I)

- Model additiu: $y_t = \mu_t + S_t + a_t$

- Model multiplicatiu: $y_t = \mu_t \cdot S_t \cdot a_t$
```{r}
# Restam la recta a la sèrie
e_add=data-tendencia$fitted.values
e_ts_add=ts(e_add,frequency = 4)
e_mult=data/tendencia$fitted.values
e_ts_mult=ts(e_mult,frequency = 4)
#plot(ts, type = "l", col = "blue", lwd = 2, xlab = "Temps", ylab = "Ventes en milers", #main = "Comparació de la Sèrie original amb la previsió")
#plot(e_ts, type = "l", col = "black", lwd = 2, xlab = "Temos", ylab = "Ventes en milers", #main = "Comparació de la Sèrie original amb la previsió")

#mitjana de la serie sense tendència
e_barra_add=mean(e_ts_add) 
e_barra_mult=mean(e_ts_mult)
#vector pels coeficientes estacionals
s_add=rep(0,4) 
s_mult=rep(0,4)
for(j in 1:4){
  indice_j=seq(j,36,by=4)
  s_add[j]=mean(e_ts_add[indice_j])-e_barra_add
  s_mult[j]=mean(e_ts_mult[indice_j])/e_barra_mult
}
#Calculam els residus
s_compl_add=rep(s_add,9) 
s_compl_mult=rep(s_mult,9) 
#s_compl
res_add=e_ts_add-s_compl_add
res_mult=e_ts_mult/s_compl_mult
```

```{r}

model_add = tendencia$fitted.values + s_compl_add
model_mult = tendencia$fitted.values* s_compl_mult

ts_add = ts(model_add, frequency = 4)
ts_mult = ts(model_mult, frequency=4)

plot.ts(ts, xlab = "Temps", ylab = "Vendes en milers", xaxt="n")
axis(1, at = x, labels = x)

lines(ts_add, col = "red")
lines(ts_mult, col = "blue")

legend("topleft", legend = c("original", "model additiu", "model multiplicatiu"), col = c("black","red", "blue"), lty = 1)

```

```{r}
print(paste("EQM Model additiu:       ", mean(na.omit((model_add - data))^2)))
print(paste("EQM Model multiplicatiu: ", mean(na.omit((model_mult - data))^2)))

```

## Comparativa (II)
```{r}
par(mfrow=c(1,2))
plot(density(na.omit(res_add)), main = "Densitat residus Add", xlab = "residus Add", ylab = "Densitat")
plot(density(na.omit(res_mult)), main = "Densitat residus Mult", xlab = "residus Mult", ylab = "Densitat")
```

```{r}
shapiro.test(res_add)$p.value
shapiro.test(res_mult)$p.value
```



# Prediccions

## Model additiu
```{r}
n=36
data_2=raw_data[1:48,]
time_extended <- seq(from = 1, by = 0.25, length.out = 48)
ts_2 <- ts(data_2, frequency = 4)
model=lm(data_2~time(ts_raw)) 
new_data <- data.frame( time.ts=time_extended)
tend <- predict(model,newdata = new_data)
estacionalitat=rep(s_add,12)
ts_pred=ts(tend+estacionalitat,frequency=4)
x=1:13
plot(ts_pred, type = "l", col = "red", lwd = 1, xlab = "Temps", ylab = "Ventes en milers",ylim = c(40,170), xaxt="n")
axis(1, at = x, labels = x)
lines(ts_2, col = "black", lwd = 1)
legend("topleft", legend = c("original", "model additiu"), col = c("black", "red"), lty = 1)
lines(rep(10, 180-30+1), 30:180, lty = "dashed")
```

```{r}
print(paste("EQM previsió:       ", mean((ts_2[37:48] - ts_pred[37:48])^2)))


```

## Model multiplicatiu

```{r}
# Extreim els elements que necessitam per a la predicció
intercept = as.numeric(tendencia$coefficients[1])
coef = as.numeric(tendencia$coefficients[2])
estacionalitat_mult <- s_mult

#predim els valors
prediccions_mult = 37:48

for (i in 1:length(prediccions_mult)){
  aux = i %% 4
  if (aux == 0){
    aux = 4
  }
  prediccions_mult[i] = (coef * (prediccions_mult[i]/4) + intercept)* s_mult[aux]
}


mult_completa = c(as.vector(model_mult), prediccions_mult)
ts_mult_c = ts(mult_completa, frequency= 4)
ts_completa = ts(raw_data, frequency = 4)
x=1:13
plot.ts(ts_completa, xlab = "Temps", ylab = "Vendes en milers", xaxt="n")
axis(1, at = x, labels = x)

lines(ts_mult_c, col = "blue")
lines(rep(10, 180-30+1), 30:180, lty = "dashed")

legend("topleft", legend = c("original", "model multiplicatiu"), col = c("black", "blue"), lty = 1)

```

```{r}
print(paste("EQM previsió:       ", mean((ts_completa[37:48] - ts_mult_c[37:48])^2)))
```


# Conclusions
- Bon ajusts dels dos models a les dades
  - El multiplicatiu s'ajusta millor
- L'error de les prediccions és major que el de les dades, però s'hi ajusta a la forma
- Sorprenentment, l'additiu prediu millor

Concloem que, en el context del problema, hem pogut predir de manera més o menys satisfactòria el nombre de vendes del producte futures.


```{css, echo = FALSE}
/* Estil de sortida per HTML/CSS */
/* Per posar notes pròpies */
todo {color: magenta}
gra {color: rgb(237, 65, 65)}
jct {color: #6666ff}
maa {color: #66bb66}
note {color: orange}
comment {display: none}
gra::before {
   content: "[G: ";
   font-weight: bold;
}
jct::before {
   content: "[J: ";
   font-weight: bold;
}
maa::before {
   content: "[M: ";
   font-weight: bold;
}
note::before {
   content: "[NOTA: ";
   font-weight: bold;
}
todo::before {
   content: "[TODO: ";
   font-weight: bold;
}
gra::after, jct::after, note::after, todo::after, maa:after {
   content: "]";
}
```

